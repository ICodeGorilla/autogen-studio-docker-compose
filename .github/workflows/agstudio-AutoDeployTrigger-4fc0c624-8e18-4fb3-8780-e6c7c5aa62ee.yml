name: Trigger auto deployment for agstudio

on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '.github/workflows/agstudio-AutoDeployTrigger.yml'

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for requesting the OIDC JWT Token
      contents: read   # Required for repository read access

    steps:
      # Step 1: Checkout the code
      - name: Checkout the branch
        uses: actions/checkout@v2

      # Step 2: Log in to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AGSTUDIO_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AGSTUDIO_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AGSTUDIO_AZURE_SUBSCRIPTION_ID }}

      # Step 3: Log in to Azure Container Registry (ACR)
      - name: Azure Container Registry Login
        run: |
          # Log in to ACR using the ACR name from secrets
          az acr login --name ${{ secrets.AGSTUDIO_ACR_NAME }}

      # Step 4: Build and Push Docker Images
      - name: Build and push container images
        run: |
          # Build the Docker images defined in docker-compose.yml
          docker-compose build

          # Push the Docker images to the Azure Container Registry
          docker-compose push

      # Step 5: Deploy to Azure Container Apps
      - name: Deploy to Azure Container Apps
        run: |
          # Define the full ACR registry URL
          $acrUrl = $(az acr show --name ${{ secrets.AGSTUDIO_ACR_NAME }} --query "loginServer" -o tsv)

          # Deploy the container app to Azure using the pushed image
          az containerapp create \
            --name agstudio \
            --resource-group DefaultResourceGroup-EUS \
            --environment agstudio-env \
            --image $acrUrl/agstudio:${{ github.sha }} \
            --target-port 8081 \
            --ingress external \
            --cpu 0.5 --memory 1.0Gi
